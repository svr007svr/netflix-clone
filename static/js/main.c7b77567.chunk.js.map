{"version":3,"sources":["axios.js","components/Row.js","request.js","components/Banner.js","components/images/netflix.png","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","err","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","apikey","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setMovie","banner","backgroundImage","backgroundSize","backgroundPosition","req","Math","floor","random","length","style","original_name","overview","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","netflix","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7b77567.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL : 'https://api.themoviedb.org/3'\r\n})\r\n\r\nexport default instance","// import {computeHeadingLevel} from '@testing-library/react';\r\nimport React, {useState, useEffect} from 'react';\r\nimport axios from '../axios';\r\nimport './row.css';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nfunction Row({title, fetchUrl, isLargeRow}) {\r\n  const base_url = 'https://image.tmdb.org/t/p/original/';\r\n\r\n  const [movies, setMovies] = useState ([]);\r\n  const [trailerUrl, setTrailerUrl] = useState ('');\r\n\r\n  useEffect (\r\n    () => {\r\n      async function fetchData () {\r\n        const request = await axios.get (fetchUrl);\r\n        setMovies (request.data.results);\r\n        return request;\r\n      }\r\n      fetchData ();\r\n    },\r\n    [fetchUrl]\r\n  );\r\n\r\n  const opts = {\r\n    height: '390px',\r\n    width: '100%',\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick = movie => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl ('');\r\n    } else {\r\n      movieTrailer (movie.name || '')\r\n        .then (url => {\r\n          const urlParams = new URLSearchParams (new URL (url).search);\r\n          setTrailerUrl (urlParams.get ('v'));\r\n        })\r\n        .catch (err => console.log (err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row_posters\">\r\n\r\n        {movies.map (movie => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick (movie)}\r\n            className={`row_poster ${isLargeRow && 'row_posterLarge'}`}\r\n            src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n\r\n      </div>\r\n\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const apikey = 'e1aeee7d119c5de3db677724cd72deb4';\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${apikey}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${apikey}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated??api_key=${apikey}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${apikey}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${apikey}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${apikey}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${apikey}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${apikey}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport axios from '../axios';\r\nimport request from '../request';\r\nimport './banner.css';\r\n\r\nfunction Banner () {\r\n  const [movie, setMovie] = useState ([]);\r\n\r\n  const banner = {\r\n    backgroundImage: `url('https://image.tmdb.org/t/p/original/${movie.backdrop_path}')`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center center',\r\n  };\r\n\r\n  useEffect (() => {\r\n    async function fetchData () {\r\n      const req = await axios.get (request.fetchNetflixOriginals);\r\n\r\n      setMovie (\r\n        req.data.results[Math.floor (Math.random () * req.data.results.length)]\r\n      );\r\n    }\r\n    fetchData ();\r\n  }, []);\r\n\r\n  //   function truncate (str, n) {\r\n  //     return str.length > n ? str.substr (0, n - 1) + '...' : str;\r\n  //   }\r\n\r\n  return (\r\n    <header className=\"banner\" style={banner}>\r\n\r\n      <div className=\"banner_content\">\r\n        <h1 className=\"banner_title\">\r\n          {movie.title || movie.name || movie.original_name}\r\n        </h1>\r\n\r\n        <div className=\"banner_buttons\">\r\n          <button className=\"banner_button\">Play</button>\r\n          <button className=\"banner_button\">My List</button>\r\n        </div>\r\n\r\n        <h1 className=\"banner_des\">\r\n          {movie.overview}\r\n        </h1>\r\n\r\n      </div>\r\n      <div className='button--fadeButtom'></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","export default __webpack_public_path__ + \"static/media/netflix.1412b1dd.png\";","import React, {useState, useEffect} from 'react';\r\nimport netflix from './images/netflix.png';\r\nimport './Navbar.css';\r\n\r\nfunction Navbar () {\r\n  const [show, handleShow] = useState (false);\r\n\r\n  useEffect (() => {\r\n    window.addEventListener ('scroll', () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow (true);\r\n      } else {\r\n        handleShow (false);\r\n      }\r\n    });\r\n    return () => {\r\n      window.removeEventListener ('scroll');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && 'nav_black'}`}>\r\n      <img className=\"nav_logo\" src={netflix} alt=\"natflix_logo\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport Row from './components/Row';\nimport './App.css';\nimport request from './request';\nimport Banner from './components/Banner';\nimport Navbar from './components/Navbar';\n\nfunction App () {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Banner />\n      <Row\n        title=\"Netflix Originals\"\n        fetchUrl={request.fetchNetflixOriginals}\n        isLargeRow={true}\n      />\n      <Row title=\"Trending Now\" fetchUrl={request.fetchTrending} />\n      <Row title=\"Top-Rated\" fetchUrl={request.fetchTopRated} />\n      <Row title=\"Horror Movies\" fetchUrl={request.fetchHorrorMovies} />\n      <Row title=\"Action Movies\" fetchUrl={request.fetchActionMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={request.fetchRomanceMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={request.fetchComedyMovies} />\n      <Row title=\"Documantaries\" fetchUrl={request.fetchDocumentaries} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render (\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById ('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals ();\n"],"sourceRoot":""}